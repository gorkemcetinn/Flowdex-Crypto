version: "3.9"
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: flowdex
      POSTGRES_USER: flowdex
      POSTGRES_DB: flowdex
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.7
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"

  backend:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    depends_on:
      postgres:
        condition: service_started
    environment:
      DATABASE_URL: postgresql+psycopg2://flowdex:flowdex@postgres:5432/flowdex
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app/backend
    command: uvicorn backend.app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ..
      dockerfile: frontend/Dockerfile
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost:8000/api
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app/frontend
    command: npm run dev -- --hostname 0.0.0.0

volumes:
  postgres-data:
